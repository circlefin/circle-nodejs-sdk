on:
  workflow_dispatch:
  push:
    branches: [openapi-regen-triggerer]
    paths:
      - sdk.json

permissions:
  id-token: write
  contents: read

env:
  OPENAPI_VER_FILE: OPENAPI_VERSION
  OPENAPI_FILE: sdk.json

name: Regenerate SDK

jobs:
  regenerate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR base branch
        uses: actions/checkout@v3
        with:
          ref: master

      - uses: actions/checkout@v3
        with:
          path: temp-trigger-repo

      - name: Transfer sdk.json file
        run: |
          mv temp-trigger-repo/sdk.json .
          rm -rf temp-trigger-repo

      - uses: actions/setup-node@v3
      - run: yarn install --frozen-lockfile

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID_PAY }}:role/github-actions-service-role

      - name: Read secrets from AWS Secrets Manager into environment variables
        uses: abhilash1in/aws-secrets-manager-action@v2.1.0
        with:
          secrets: |
            /ops/utilities/github-actions-bot/gpg-priv-key
            /ops/utilities/github-actions-bot/api-token

      - name: Read openapi document
        id: read-openapi-doc
        run: |
          content=`cat $OPENAPI_FILE`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=doc::$content"

      - name: Extract new version
        id: get-new-openapi-ver
        run: echo "::set-output name=version::${{ fromJson(steps.read-openapi-doc.outputs.doc).info.version }}"      

      - name: Regenerate SDK code
        run: yarn gen-sdk ${{ steps.get-new-openapi-ver.outputs.version }}

      - name: Get Conventional Commits prefix
        id: get-conven-commit-pref
        run: |
          NEW_VERSION=${{ steps.get-new-openapi-ver.outputs.version }}
          OLD_VERSION=$(cat $OPENAPI_VER_FILE)

          IFS='.' read -ra OLD_VER_PARTS <<< $OLD_VERSION
          IFS='.' read -ra NEW_VER_PARTS <<< $NEW_VERSION

          # Conventional Commits commit prefixes for major, minor, and patch bumps
          CONVEN_COMM_PREFS=("feat!" "feat" "fix")
          COMMIT_PREF=""

          for i in $(seq 0 2); do 
              if (( ${OLD_VER_PARTS[$i]} != ${NEW_VER_PARTS[$i]} ))
              then
                  COMMIT_PREF=${CONVEN_COMM_PREFS[$i]}
                  break
              fi
          done

          echo "::set-output name=commit-pref::$COMMIT_PREF"

      - name: Clean and prepare PR files
        run: |
          echo "${{ steps.get-new-openapi-ver.outputs.version }}" > $OPENAPI_VER_FILE

      - name: Import GPG key
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ env._OPS_UTILITIES_GITHUB_ACTIONS_BOT_GPG_PRIV_KEY }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Create pull request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ env._OPS_UTILITIES_GITHUB_ACTIONS_BOT_API_TOKEN }}
          base: master
          branch: bot-openapi-regen-pr-v${{ steps.get-new-openapi-ver.outputs.version }}
          
          author: ${{ steps.import-gpg.outputs.name }} <${{ steps.import-gpg.outputs.email }}>
          committer: ${{ steps.import-gpg.outputs.name }} <${{ steps.import-gpg.outputs.email }}>
          
          title: Regenerate code from OpenAPI document v${{ steps.get-new-openapi-ver.outputs.version }}
          commit-message: "${{ steps.get-conven-commit-pref.outputs.commit-pref }}: regen code openapi doc v${{ steps.get-new-openapi-ver.outputs.version }}"
          add-paths: |
            src/generated
            ${{ env.OPENAPI_VER_FILE }}
            ${{ env.OPENAPI_FILE }}
          body: |
            Automated pull request by GitHub action following Circle OpenAPI document update. 
            SDK Code generated using [OpenAPI generator](https://openapi-generator.tech/) 