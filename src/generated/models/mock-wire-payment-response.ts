/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// May contain unused imports in some cases
// @ts-ignore
import { FiatMoneyUsd } from "./fiat-money-usd";
// May contain unused imports in some cases
// @ts-ignore
import { MockWirePaymentBeneficiaryBankInstruction } from "./mock-wire-payment-beneficiary-bank-instruction";

/**
 *
 * @export
 * @interface MockWirePaymentResponse
 */
export interface MockWirePaymentResponse {
  /**
   * Wire tracking reference that needs to be set in the wire reference to beneficiary field. This field is retrievable through the response during wire creation or via the bank instruction endpoint.
   * @type {string}
   * @memberof MockWirePaymentResponse
   */
  trackingRef?: string;
  /**
   *
   * @type {FiatMoneyUsd}
   * @memberof MockWirePaymentResponse
   */
  amount?: FiatMoneyUsd;
  /**
   *
   * @type {MockWirePaymentBeneficiaryBankInstruction}
   * @memberof MockWirePaymentResponse
   */
  beneficiaryBank?: MockWirePaymentBeneficiaryBankInstruction;
  /**
   * Enumerated status of the wire payment. Status `pending` indicates that the wire payment is in process; `processed` indicates it finished successfully; `failed` indicates it failed.
   * @type {string}
   * @memberof MockWirePaymentResponse
   */
  status?: MockWirePaymentResponseStatusEnum;
}

export const MockWirePaymentResponseStatusEnum = {
  Pending: "pending",
  Processed: "processed",
  Failed: "failed"
} as const;

export type MockWirePaymentResponseStatusEnum =
  typeof MockWirePaymentResponseStatusEnum[keyof typeof MockWirePaymentResponseStatusEnum];
