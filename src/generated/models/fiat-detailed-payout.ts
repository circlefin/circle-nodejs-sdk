/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// May contain unused imports in some cases
// @ts-ignore
import { FiatMoneyUsd } from "./fiat-money-usd";
// May contain unused imports in some cases
// @ts-ignore
import { FiatPayoutDestination } from "./fiat-payout-destination";
// May contain unused imports in some cases
// @ts-ignore
import { FinalAdjustments } from "./final-adjustments";
// May contain unused imports in some cases
// @ts-ignore
import { PayoutErrorCode } from "./payout-error-code";
// May contain unused imports in some cases
// @ts-ignore
import { PayoutMoney } from "./payout-money";
// May contain unused imports in some cases
// @ts-ignore
import { RiskEvaluation } from "./risk-evaluation";
// May contain unused imports in some cases
// @ts-ignore
import { UnwithdrawalObject } from "./unwithdrawal-object";

/**
 *
 * @export
 * @interface FiatDetailedPayout
 */
export interface FiatDetailedPayout {
  /**
   * Unique system generated identifier for the entity.
   * @type {string}
   * @memberof FiatDetailedPayout
   */
  id?: string;
  /**
   * The identifier of the source wallet used to fund a payout.
   * @type {string}
   * @memberof FiatDetailedPayout
   */
  sourceWalletId?: string;
  /**
   *
   * @type {FiatPayoutDestination}
   * @memberof FiatDetailedPayout
   */
  destination?: FiatPayoutDestination;
  /**
   *
   * @type {FiatMoneyUsd}
   * @memberof FiatDetailedPayout
   */
  amount?: FiatMoneyUsd;
  /**
   *
   * @type {PayoutMoney}
   * @memberof FiatDetailedPayout
   */
  toAmount?: PayoutMoney;
  /**
   *
   * @type {FiatMoneyUsd}
   * @memberof FiatDetailedPayout
   */
  fees?: FiatMoneyUsd;
  /**
   * Status of the payout. Status `pending` indicates that the payout is in process; `complete` indicates it finished successfully; `failed` indicates it failed.
   * @type {string}
   * @memberof FiatDetailedPayout
   */
  status?: FiatDetailedPayoutStatusEnum;
  /**
   * A payout tracking reference. Will be present once known.
   * @type {any}
   * @memberof FiatDetailedPayout
   */
  trackingRef?: any | null;
  /**
   * External network identifier which will be present once provided from the applicable network.   Examples: * **Input/Output Message Accountability Data (IMAD/OMAD)**: unique number given to each FedWire payment when using the Federal Reserve Bank Service which can be used to investigate and track wire transfers.
   * @type {string}
   * @memberof FiatDetailedPayout
   */
  externalRef?: string;
  /**
   *
   * @type {PayoutErrorCode}
   * @memberof FiatDetailedPayout
   */
  errorCode?: PayoutErrorCode | null;
  /**
   *
   * @type {RiskEvaluation}
   * @memberof FiatDetailedPayout
   */
  riskEvaluation?: RiskEvaluation | null;
  /**
   *
   * @type {FinalAdjustments}
   * @memberof FiatDetailedPayout
   */
  adjustments?: FinalAdjustments | null;
  /**
   *
   * @type {UnwithdrawalObject}
   * @memberof FiatDetailedPayout
   */
  return?: UnwithdrawalObject | null;
  /**
   * ISO-8601 UTC date/time format.
   * @type {string}
   * @memberof FiatDetailedPayout
   */
  createDate?: string;
  /**
   * ISO-8601 UTC date/time format.
   * @type {string}
   * @memberof FiatDetailedPayout
   */
  updateDate?: string;
}

export const FiatDetailedPayoutStatusEnum = {
  Pending: "pending",
  Complete: "complete",
  Failed: "failed"
} as const;

export type FiatDetailedPayoutStatusEnum =
  typeof FiatDetailedPayoutStatusEnum[keyof typeof FiatDetailedPayoutStatusEnum];
