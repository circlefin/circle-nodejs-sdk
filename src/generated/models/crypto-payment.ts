/* tslint:disable */
/* eslint-disable */
/**
 * All Circle APIs
 * Circle\'s General, Core Functionality, Payments, Payouts, and Accounts APIs bundled into one OpenAPI Specification.
 *
 * The version of the OpenAPI document: 1.0.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CryptoPaymentDepositAddress } from "./crypto-payment-deposit-address";
import { FiatMoneyUsd } from "./fiat-money-usd";
import { PaymentStatus } from "./payment-status";

/**
 * Status information of the related payment. This property is only present on refund or cancel items.
 * @export
 * @interface CryptoPayment
 */
export interface CryptoPayment {
  /**
   * Unique system generated identifier for the entity.
   * @type {string}
   * @memberof CryptoPayment
   */
  id: string;
  /**
   * Type of the payment object.
   * @type {string}
   * @memberof CryptoPayment
   */
  type: CryptoPaymentTypeEnum;
  /**
   * Unique system generated identifier for the merchant.
   * @type {string}
   * @memberof CryptoPayment
   */
  merchantId: string;
  /**
   * Unique system generated identifier for the wallet of the merchant.
   * @type {string}
   * @memberof CryptoPayment
   */
  merchantWalletId?: string;
  /**
   *
   * @type {FiatMoneyUsd}
   * @memberof CryptoPayment
   */
  amount: FiatMoneyUsd;
  /**
   *
   * @type {PaymentStatus}
   * @memberof CryptoPayment
   */
  status: PaymentStatus;
  /**
   *
   * @type {FiatMoneyUsd}
   * @memberof CryptoPayment
   */
  fees?: FiatMoneyUsd;
  /**
   *
   * @type {string}
   * @memberof CryptoPayment
   */
  paymentIntentId?: string;
  /**
   *
   * @type {FiatMoneyUsd}
   * @memberof CryptoPayment
   */
  settlementAmount?: FiatMoneyUsd;
  /**
   *
   * @type {CryptoPaymentDepositAddress}
   * @memberof CryptoPayment
   */
  depositAddress?: CryptoPaymentDepositAddress;
  /**
   *
   * @type {string}
   * @memberof CryptoPayment
   */
  transactionHash?: string;
  /**
   * ISO-8601 UTC date/time format.
   * @type {string}
   * @memberof CryptoPayment
   */
  createDate?: string;
  /**
   * ISO-8601 UTC date/time format.
   * @type {string}
   * @memberof CryptoPayment
   */
  updateDate?: string;
}

export const CryptoPaymentTypeEnum = {
  Payment: "payment"
} as const;

export type CryptoPaymentTypeEnum =
  typeof CryptoPaymentTypeEnum[keyof typeof CryptoPaymentTypeEnum];
